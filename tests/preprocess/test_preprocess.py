import pytest

from ingredient_parser.en import PreProcessor


class TestPreProcessor__builtins__:
    def test__str__(self):
        """
        Test PreProcessor __str__
        """
        p = PreProcessor("1/2 cup chicken broth")
        truth = """Pre-processed recipe ingredient sentence
\t  Input: 1/2 cup chicken broth
\tCleaned: #1$2 cup chicken broth
\t Tokens: ['#1$2', 'cup', 'chicken', 'broth']"""
        assert str(p) == truth

    def test__repr__(self):
        """
        Test PreProessor __repr__
        """
        p = PreProcessor("1/2 cup chicken broth")
        assert repr(p) == 'PreProcessor("1/2 cup chicken broth")'

    def test_debug_output(self, capsys):
        """
        Test printed debug output
        """
        _ = PreProcessor("1/2 cup chicken broth", show_debug_output=True)
        captured = capsys.readouterr()
        assert (
            captured.out
            == """_replace_en_em_dash: 1/2 cup chicken broth
_replace_html_fractions: 1/2 cup chicken broth
_replace_unicode_fractions: 1/2 cup chicken broth
combine_quantities_split_by_and: 1/2 cup chicken broth
_identify_fractions: #1$2 cup chicken broth
_split_quantity_and_units: #1$2 cup chicken broth
_remove_unit_trailing_period: #1$2 cup chicken broth
replace_string_range: #1$2 cup chicken broth
_replace_dupe_units_ranges: #1$2 cup chicken broth
_merge_quantity_x: #1$2 cup chicken broth
_collapse_ranges: #1$2 cup chicken broth
"""
        )


def normalise_test_cases() -> list[tuple[str, ...]]:
    """
    Return a list of tuples of input sentences and their normalised form.
    Many of these examples are based on the examples in docstrings for the
    PreProcessor functions.
    """
    return [
        ("&frac12; cup warm water (105°F)", "#1$2 cup warm water (105°F)"),
        ("3 1/2 chilis anchos", "3#1$2 chilis anchos"),
        ("six eggs", "six eggs"),
        ("thumbnail-size piece ginger", "thumbnail-size piece ginger"),
        (
            "2 cups flour – white or self-raising",
            "2 cups flour - white or self-raising",
        ),
        ("3–4 sirloin steaks", "3-4 sirloin steaks"),
        ("three large onions", "three large onions"),
        ("twelve bonbons", "twelve bonbons"),
        ("1&frac34; cups tomato ketchup", "1#3$4 cups tomato ketchup"),
        ("1/2 cup icing sugar", "#1$2 cup icing sugar"),
        ("2 3/4 pound chickpeas", "2#3$4 pound chickpeas"),
        ("1 and 1/2 tsp fine grain sea salt", "1#1$2 tsp fine grain sea salt"),
        ("1 and 1/4 cups dark chocolate morsels", "1#1$4 cups dark chocolate morsels"),
        ("½ cup icing sugar", "#1$2 cup icing sugar"),
        ("3⅓ cups warm water", "3#1$3 cups warm water"),
        ("¼-½ teaspoon", "#1$4-#1$2 teaspoon"),
        ("100g green beans", "100 g green beans"),
        ("2-pound red peppers, sliced", "2 pound red peppers, sliced"),
        ("2lb1oz cherry tomatoes", "2 lb 1 oz cherry tomatoes"),
        ("2lb-1oz cherry tomatoes", "2 lb - 1 oz cherry tomatoes"),
        ("1 tsp. garlic powder", "1 tsp garlic powder"),
        ("5 oz. chopped tomatoes", "5 oz chopped tomatoes"),
        ("1 to 2 mashed bananas", "1-2 mashed bananas"),
        ("5- or 6- large apples", "5-6- large apples"),
        ("227 g - 283.5 g/8-10 oz duck breast", "227-283.5 g/8-10 oz duck breast"),
        ("400-500 g/14 oz - 17 oz rhubarb", "400-500 g/14-17 oz rhubarb"),
        ("8 x 450 g/1 lb live lobsters", "8x 450 g/1 lb live lobsters"),
        ("4 x 100 g wild salmon fillet", "4x 100 g wild salmon fillet"),
        (
            "½ - ¾ cup heavy cream, plus extra for brushing the tops of the scones",
            "#1$2-#3$4 cup heavy cream, plus extra for brushing the tops of the scones",
        ),
    ]


class TestPreProcessor_normalise:
    @pytest.mark.parametrize("testcase", normalise_test_cases())
    def test_normalise(self, testcase):
        """
        Test that each example sentence is normalised correctly
        """
        input_sentence, normalised = testcase
        p = PreProcessor(input_sentence)
        assert p.sentence == normalised


class TestPreProcessor_sentence_features:
    def test(self):
        p = PreProcessor("1/2 cup chicken broth")
        expected = [
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "CD",
                "stem": "!num",
                "is_capitalised": False,
                "is_unit": False,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "!xxx",
                "v0": -4.450374126434326,
                "v1": 1.1047776937484741,
                "v2": 3.3393290042877197,
                "v3": 2.4236690998077393,
                "v4": -0.000127299630548805,
                "v5": 1.0201817750930786,
                "v6": 1.1500846147537231,
                "v7": -1.5282728672027588,
                "v8": -1.5395865440368652,
                "v9": 1.6043453216552734,
                "v10": 4.825988292694092,
                "v11": 6.112724781036377,
                "v12": -2.374537706375122,
                "v13": 1.3642041683197021,
                "v14": -0.05179698020219803,
                "v15": -3.4723782539367676,
                "v16": 2.587674379348755,
                "v17": -1.6309138536453247,
                "v18": 0.04706336185336113,
                "v19": 1.3675754070281982,
                "v20": -1.7737793922424316,
                "v21": 0.4518626630306244,
                "v22": 0.41334760189056396,
                "v23": -0.7428506016731262,
                "v24": 1.0706346035003662,
                "next_stem": "cup",
                "next_pos": "CD+NN",
                "next_is_capitalised": False,
                "next_is_unit": True,
                "next_is_punc": False,
                "next_is_ambiguous": False,
                "next_is_in_parens": False,
                "next_is_after_comma": False,
                "next_is_after_plus": False,
                "next_word_shape": "xxx",
                "next_v0": -27.562368392944336,
                "next_v1": -2.501225471496582,
                "next_v2": 20.121807098388672,
                "next_v3": -1.8089635372161865,
                "next_v4": -0.6918728947639465,
                "next_v5": 1.9737409353256226,
                "next_v6": -2.0127384662628174,
                "next_v7": 2.8602123260498047,
                "next_v8": -0.8119694590568542,
                "next_v9": -1.5808278322219849,
                "next_v10": 5.231435775756836,
                "next_v11": 1.2096766233444214,
                "next_v12": 0.6017953753471375,
                "next_v13": -2.456357955932617,
                "next_v14": -0.4420018494129181,
                "next_v15": -3.037268877029419,
                "next_v16": 2.5713276863098145,
                "next_v17": -3.4609789848327637,
                "next_v18": -2.890536069869995,
                "next_v19": 4.339434623718262,
                "next_v20": -5.650601863861084,
                "next_v21": -2.939061403274536,
                "next_v22": -3.3384485244750977,
                "next_v23": 4.775883197784424,
                "next_v24": 0.31439322233200073,
                "next2_stem": "chicken",
                "next2_pos": "CD+NN+NN",
                "next2_is_capitalised": False,
                "next2_is_unit": False,
                "next2_is_punc": False,
                "next2_is_ambiguous": False,
                "next2_is_in_parens": False,
                "next2_is_after_comma": False,
                "next2_is_after_plus": False,
                "next2_word_shape": "xxxxxxx",
                "next3_stem": "broth",
                "next3_pos": "CD+NN+NN+NN",
                "next3_is_capitalised": False,
                "next3_is_unit": False,
                "next3_is_punc": False,
                "next3_is_ambiguous": False,
                "next3_is_in_parens": False,
                "next3_is_after_comma": False,
                "next3_is_after_plus": False,
                "next3_word_shape": "xxxxx",
            },
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "NN",
                "stem": "cup",
                "is_capitalised": False,
                "is_unit": True,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "xxx",
                "v0": -27.562368392944336,
                "v1": -2.501225471496582,
                "v2": 20.121807098388672,
                "v3": -1.8089635372161865,
                "v4": -0.6918728947639465,
                "v5": 1.9737409353256226,
                "v6": -2.0127384662628174,
                "v7": 2.8602123260498047,
                "v8": -0.8119694590568542,
                "v9": -1.5808278322219849,
                "v10": 5.231435775756836,
                "v11": 1.2096766233444214,
                "v12": 0.6017953753471375,
                "v13": -2.456357955932617,
                "v14": -0.4420018494129181,
                "v15": -3.037268877029419,
                "v16": 2.5713276863098145,
                "v17": -3.4609789848327637,
                "v18": -2.890536069869995,
                "v19": 4.339434623718262,
                "v20": -5.650601863861084,
                "v21": -2.939061403274536,
                "v22": -3.3384485244750977,
                "v23": 4.775883197784424,
                "v24": 0.31439322233200073,
                "prev_stem": "!num",
                "prev_pos": "CD+NN",
                "prev_is_capitalised": False,
                "prev_is_unit": False,
                "prev_is_punc": False,
                "prev_is_ambiguous": False,
                "prev_is_in_parens": False,
                "prev_is_after_comma": False,
                "prev_is_after_plus": False,
                "prev_word_shape": "!xxx",
                "prev_v0": -4.450374126434326,
                "prev_v1": 1.1047776937484741,
                "prev_v2": 3.3393290042877197,
                "prev_v3": 2.4236690998077393,
                "prev_v4": -0.000127299630548805,
                "prev_v5": 1.0201817750930786,
                "prev_v6": 1.1500846147537231,
                "prev_v7": -1.5282728672027588,
                "prev_v8": -1.5395865440368652,
                "prev_v9": 1.6043453216552734,
                "prev_v10": 4.825988292694092,
                "prev_v11": 6.112724781036377,
                "prev_v12": -2.374537706375122,
                "prev_v13": 1.3642041683197021,
                "prev_v14": -0.05179698020219803,
                "prev_v15": -3.4723782539367676,
                "prev_v16": 2.587674379348755,
                "prev_v17": -1.6309138536453247,
                "prev_v18": 0.04706336185336113,
                "prev_v19": 1.3675754070281982,
                "prev_v20": -1.7737793922424316,
                "prev_v21": 0.4518626630306244,
                "prev_v22": 0.41334760189056396,
                "prev_v23": -0.7428506016731262,
                "prev_v24": 1.0706346035003662,
                "next_stem": "chicken",
                "next_pos": "NN+NN",
                "next_is_capitalised": False,
                "next_is_unit": False,
                "next_is_punc": False,
                "next_is_ambiguous": False,
                "next_is_in_parens": False,
                "next_is_after_comma": False,
                "next_is_after_plus": False,
                "next_word_shape": "xxxxxxx",
                "next_v0": -10.713788986206055,
                "next_v1": 14.43897533416748,
                "next_v2": -6.585206031799316,
                "next_v3": -1.5129882097244263,
                "next_v4": 3.8840019702911377,
                "next_v5": 1.208520770072937,
                "next_v6": 3.994511365890503,
                "next_v7": -2.2167866230010986,
                "next_v8": 0.4206472337245941,
                "next_v9": 0.02279835380613804,
                "next_v10": -1.1733499765396118,
                "next_v11": 0.06328199058771133,
                "next_v12": -2.2495622634887695,
                "next_v13": -0.3632739782333374,
                "next_v14": -2.6035873889923096,
                "next_v15": -0.24813616275787354,
                "next_v16": 1.3750853538513184,
                "next_v17": -5.603221416473389,
                "next_v18": -2.096400737762451,
                "next_v19": 3.0715389251708984,
                "next_v20": 4.047541618347168,
                "next_v21": 0.05792256072163582,
                "next_v22": -1.5283033847808838,
                "next_v23": -0.4820575714111328,
                "next_v24": 1.3596322536468506,
                "next2_stem": "broth",
                "next2_pos": "NN+NN+NN",
                "next2_is_capitalised": False,
                "next2_is_unit": False,
                "next2_is_punc": False,
                "next2_is_ambiguous": False,
                "next2_is_in_parens": False,
                "next2_is_after_comma": False,
                "next2_is_after_plus": False,
                "next2_word_shape": "xxxxx",
            },
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "NN",
                "stem": "chicken",
                "is_capitalised": False,
                "is_unit": False,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "xxxxxxx",
                "prefix_3": "chi",
                "suffix_3": "ken",
                "prefix_4": "chic",
                "suffix_4": "cken",
                "prefix_5": "chick",
                "suffix_5": "icken",
                "v0": -10.713788986206055,
                "v1": 14.43897533416748,
                "v2": -6.585206031799316,
                "v3": -1.5129882097244263,
                "v4": 3.8840019702911377,
                "v5": 1.208520770072937,
                "v6": 3.994511365890503,
                "v7": -2.2167866230010986,
                "v8": 0.4206472337245941,
                "v9": 0.02279835380613804,
                "v10": -1.1733499765396118,
                "v11": 0.06328199058771133,
                "v12": -2.2495622634887695,
                "v13": -0.3632739782333374,
                "v14": -2.6035873889923096,
                "v15": -0.24813616275787354,
                "v16": 1.3750853538513184,
                "v17": -5.603221416473389,
                "v18": -2.096400737762451,
                "v19": 3.0715389251708984,
                "v20": 4.047541618347168,
                "v21": 0.05792256072163582,
                "v22": -1.5283033847808838,
                "v23": -0.4820575714111328,
                "v24": 1.3596322536468506,
                "prev_stem": "cup",
                "prev_pos": "NN+NN",
                "prev_is_capitalised": False,
                "prev_is_unit": True,
                "prev_is_punc": False,
                "prev_is_ambiguous": False,
                "prev_is_in_parens": False,
                "prev_is_after_comma": False,
                "prev_is_after_plus": False,
                "prev_word_shape": "xxx",
                "prev_v0": -27.562368392944336,
                "prev_v1": -2.501225471496582,
                "prev_v2": 20.121807098388672,
                "prev_v3": -1.8089635372161865,
                "prev_v4": -0.6918728947639465,
                "prev_v5": 1.9737409353256226,
                "prev_v6": -2.0127384662628174,
                "prev_v7": 2.8602123260498047,
                "prev_v8": -0.8119694590568542,
                "prev_v9": -1.5808278322219849,
                "prev_v10": 5.231435775756836,
                "prev_v11": 1.2096766233444214,
                "prev_v12": 0.6017953753471375,
                "prev_v13": -2.456357955932617,
                "prev_v14": -0.4420018494129181,
                "prev_v15": -3.037268877029419,
                "prev_v16": 2.5713276863098145,
                "prev_v17": -3.4609789848327637,
                "prev_v18": -2.890536069869995,
                "prev_v19": 4.339434623718262,
                "prev_v20": -5.650601863861084,
                "prev_v21": -2.939061403274536,
                "prev_v22": -3.3384485244750977,
                "prev_v23": 4.775883197784424,
                "prev_v24": 0.31439322233200073,
                "prev2_stem": "!num",
                "prev2_pos": "CD+NN+NN",
                "prev2_is_capitalised": False,
                "prev2_is_unit": False,
                "prev2_is_punc": False,
                "prev2_is_ambiguous": False,
                "prev2_is_in_parens": False,
                "prev2_is_after_comma": False,
                "prev2_is_after_plus": False,
                "prev2_word_shape": "!xxx",
                "next_stem": "broth",
                "next_pos": "NN+NN",
                "next_is_capitalised": False,
                "next_is_unit": False,
                "next_is_punc": False,
                "next_is_ambiguous": False,
                "next_is_in_parens": False,
                "next_is_after_comma": False,
                "next_is_after_plus": False,
                "next_word_shape": "xxxxx",
                "next_v0": -15.696263313293457,
                "next_v1": 11.663461685180664,
                "next_v2": -7.0112199783325195,
                "next_v3": -10.239834785461426,
                "next_v4": -0.38245129585266113,
                "next_v5": 6.039262294769287,
                "next_v6": 1.9470871686935425,
                "next_v7": 6.571796894073486,
                "next_v8": 2.749891757965088,
                "next_v9": 0.5458153486251831,
                "next_v10": -1.169428825378418,
                "next_v11": -0.3742274343967438,
                "next_v12": -2.8667218685150146,
                "next_v13": 2.8582847118377686,
                "next_v14": -3.631101131439209,
                "next_v15": 1.2908079624176025,
                "next_v16": 7.7367987632751465,
                "next_v17": -6.036724090576172,
                "next_v18": -3.507303476333618,
                "next_v19": 5.410525321960449,
                "next_v20": 0.38456547260284424,
                "next_v21": -0.15446555614471436,
                "next_v22": -1.5011024475097656,
                "next_v23": 0.8348596692085266,
                "next_v24": -0.40902167558670044,
            },
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "NN",
                "stem": "broth",
                "is_capitalised": False,
                "is_unit": False,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "xxxxx",
                "prefix_3": "bro",
                "suffix_3": "oth",
                "prefix_4": "brot",
                "suffix_4": "roth",
                "v0": -15.696263313293457,
                "v1": 11.663461685180664,
                "v2": -7.0112199783325195,
                "v3": -10.239834785461426,
                "v4": -0.38245129585266113,
                "v5": 6.039262294769287,
                "v6": 1.9470871686935425,
                "v7": 6.571796894073486,
                "v8": 2.749891757965088,
                "v9": 0.5458153486251831,
                "v10": -1.169428825378418,
                "v11": -0.3742274343967438,
                "v12": -2.8667218685150146,
                "v13": 2.8582847118377686,
                "v14": -3.631101131439209,
                "v15": 1.2908079624176025,
                "v16": 7.7367987632751465,
                "v17": -6.036724090576172,
                "v18": -3.507303476333618,
                "v19": 5.410525321960449,
                "v20": 0.38456547260284424,
                "v21": -0.15446555614471436,
                "v22": -1.5011024475097656,
                "v23": 0.8348596692085266,
                "v24": -0.40902167558670044,
                "prev_stem": "chicken",
                "prev_pos": "NN+NN",
                "prev_is_capitalised": False,
                "prev_is_unit": False,
                "prev_is_punc": False,
                "prev_is_ambiguous": False,
                "prev_is_in_parens": False,
                "prev_is_after_comma": False,
                "prev_is_after_plus": False,
                "prev_word_shape": "xxxxxxx",
                "prev_v0": -10.713788986206055,
                "prev_v1": 14.43897533416748,
                "prev_v2": -6.585206031799316,
                "prev_v3": -1.5129882097244263,
                "prev_v4": 3.8840019702911377,
                "prev_v5": 1.208520770072937,
                "prev_v6": 3.994511365890503,
                "prev_v7": -2.2167866230010986,
                "prev_v8": 0.4206472337245941,
                "prev_v9": 0.02279835380613804,
                "prev_v10": -1.1733499765396118,
                "prev_v11": 0.06328199058771133,
                "prev_v12": -2.2495622634887695,
                "prev_v13": -0.3632739782333374,
                "prev_v14": -2.6035873889923096,
                "prev_v15": -0.24813616275787354,
                "prev_v16": 1.3750853538513184,
                "prev_v17": -5.603221416473389,
                "prev_v18": -2.096400737762451,
                "prev_v19": 3.0715389251708984,
                "prev_v20": 4.047541618347168,
                "prev_v21": 0.05792256072163582,
                "prev_v22": -1.5283033847808838,
                "prev_v23": -0.4820575714111328,
                "prev_v24": 1.3596322536468506,
                "prev2_stem": "cup",
                "prev2_pos": "NN+NN+NN",
                "prev2_is_capitalised": False,
                "prev2_is_unit": True,
                "prev2_is_punc": False,
                "prev2_is_ambiguous": False,
                "prev2_is_in_parens": False,
                "prev2_is_after_comma": False,
                "prev2_is_after_plus": False,
                "prev2_word_shape": "xxx",
                "prev3_stem": "!num",
                "prev3_pos": "CD+NN+NN+NN",
                "prev3_is_capitalised": False,
                "prev3_is_unit": False,
                "prev3_is_punc": False,
                "prev3_is_ambiguous": False,
                "prev3_is_in_parens": False,
                "prev3_is_after_comma": False,
                "prev3_is_after_plus": False,
                "prev3_word_shape": "!xxx",
            },
        ]

        assert p.sentence_features() == expected
