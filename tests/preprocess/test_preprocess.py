import pytest

from ingredient_parser.en import PreProcessor


class TestPreProcessor__builtins__:
    def test__str__(self):
        """
        Test PreProcessor __str__
        """
        p = PreProcessor("1/2 cup chicken broth")
        truth = """Pre-processed recipe ingredient sentence
\t  Input: 1/2 cup chicken broth
\tCleaned: #1$2 cup chicken broth
\t Tokens: ['#1$2', 'cup', 'chicken', 'broth']"""
        assert str(p) == truth

    def test__repr__(self):
        """
        Test PreProessor __repr__
        """
        p = PreProcessor("1/2 cup chicken broth")
        assert repr(p) == 'PreProcessor("1/2 cup chicken broth")'

    def test_debug_output(self, capsys):
        """
        Test printed debug output
        """
        _ = PreProcessor("1/2 cup chicken broth", show_debug_output=True)
        captured = capsys.readouterr()
        assert (
            captured.out
            == """_replace_en_em_dash: 1/2 cup chicken broth
_replace_html_fractions: 1/2 cup chicken broth
_replace_unicode_fractions: 1/2 cup chicken broth
combine_quantities_split_by_and: 1/2 cup chicken broth
_identify_fractions: #1$2 cup chicken broth
_split_quantity_and_units: #1$2 cup chicken broth
_remove_unit_trailing_period: #1$2 cup chicken broth
replace_string_range: #1$2 cup chicken broth
_replace_dupe_units_ranges: #1$2 cup chicken broth
_merge_quantity_x: #1$2 cup chicken broth
_collapse_ranges: #1$2 cup chicken broth
"""
        )


def normalise_test_cases() -> list[tuple[str, ...]]:
    """
    Return a list of tuples of input sentences and their normalised form.
    Many of these examples are based on the examples in docstrings for the
    PreProcessor functions.
    """
    return [
        ("&frac12; cup warm water (105°F)", "#1$2 cup warm water (105°F)"),
        ("3 1/2 chilis anchos", "3#1$2 chilis anchos"),
        ("six eggs", "six eggs"),
        ("thumbnail-size piece ginger", "thumbnail-size piece ginger"),
        (
            "2 cups flour – white or self-raising",
            "2 cups flour - white or self-raising",
        ),
        ("3–4 sirloin steaks", "3-4 sirloin steaks"),
        ("three large onions", "three large onions"),
        ("twelve bonbons", "twelve bonbons"),
        ("1&frac34; cups tomato ketchup", "1#3$4 cups tomato ketchup"),
        ("1/2 cup icing sugar", "#1$2 cup icing sugar"),
        ("2 3/4 pound chickpeas", "2#3$4 pound chickpeas"),
        ("1 and 1/2 tsp fine grain sea salt", "1#1$2 tsp fine grain sea salt"),
        ("1 and 1/4 cups dark chocolate morsels", "1#1$4 cups dark chocolate morsels"),
        ("½ cup icing sugar", "#1$2 cup icing sugar"),
        ("3⅓ cups warm water", "3#1$3 cups warm water"),
        ("¼-½ teaspoon", "#1$4-#1$2 teaspoon"),
        ("100g green beans", "100 g green beans"),
        ("2-pound red peppers, sliced", "2 pound red peppers, sliced"),
        ("2lb1oz cherry tomatoes", "2 lb 1 oz cherry tomatoes"),
        ("2lb-1oz cherry tomatoes", "2 lb - 1 oz cherry tomatoes"),
        ("1 tsp. garlic powder", "1 tsp garlic powder"),
        ("5 oz. chopped tomatoes", "5 oz chopped tomatoes"),
        ("1 to 2 mashed bananas", "1-2 mashed bananas"),
        ("5- or 6- large apples", "5-6- large apples"),
        ("227 g - 283.5 g/8-10 oz duck breast", "227-283.5 g/8-10 oz duck breast"),
        ("400-500 g/14 oz - 17 oz rhubarb", "400-500 g/14-17 oz rhubarb"),
        ("8 x 450 g/1 lb live lobsters", "8x 450 g/1 lb live lobsters"),
        ("4 x 100 g wild salmon fillet", "4x 100 g wild salmon fillet"),
        (
            "½ - ¾ cup heavy cream, plus extra for brushing the tops of the scones",
            "#1$2-#3$4 cup heavy cream, plus extra for brushing the tops of the scones",
        ),
    ]


class TestPreProcessor_normalise:
    @pytest.mark.parametrize("testcase", normalise_test_cases())
    def test_normalise(self, testcase):
        """
        Test that each example sentence is normalised correctly
        """
        input_sentence, normalised = testcase
        p = PreProcessor(input_sentence)
        assert p.sentence == normalised


class TestPreProcessor_sentence_features:
    def test(self):
        p = PreProcessor("1/2 cup chicken broth")
        expected = [
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "CD",
                "stem": "!num",
                "is_capitalised": False,
                "is_unit": False,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "!xxx",
                "next_stem": "cup",
                "next_pos": "CD+NN",
                "next_is_capitalised": False,
                "next_is_unit": True,
                "next_is_punc": False,
                "next_is_ambiguous": False,
                "next_is_in_parens": False,
                "next_is_after_comma": False,
                "next_is_after_plus": False,
                "next_word_shape": "xxx",
                "next_v0": -0.15598289668560028,
                "next_v1": -0.7311531901359558,
                "next_v2": -0.28150954842567444,
                "next_v3": -0.3382653594017029,
                "next_v4": 0.7856824398040771,
                "next_v5": 0.2057391107082367,
                "next_v6": 1.4230132102966309,
                "next_v7": -0.4138856828212738,
                "next_v8": -0.2200929969549179,
                "next_v9": 0.18283537030220032,
                "next_v10": -1.4061038494110107,
                "next_v11": 0.1154366284608841,
                "next_v12": 0.5298011302947998,
                "next_v13": 0.17468351125717163,
                "next_v14": 0.17680716514587402,
                "next_v15": -0.030261121690273285,
                "next_v16": 0.7180622220039368,
                "next_v17": -0.24787934124469757,
                "next_v18": -1.034907579421997,
                "next_v19": -0.4354341924190521,
                "next_v20": 0.15124927461147308,
                "next_v21": -3.0361979007720947,
                "next_v22": 0.0821448341012001,
                "next_v23": 0.3137955963611603,
                "next_v24": -0.17191854119300842,
                "next2_stem": "chicken",
                "next2_pos": "CD+NN+NN",
                "next2_is_capitalised": False,
                "next2_is_unit": False,
                "next2_is_punc": False,
                "next2_is_ambiguous": False,
                "next2_is_in_parens": False,
                "next2_is_after_comma": False,
                "next2_is_after_plus": False,
                "next2_word_shape": "xxxxxxx",
                "next3_stem": "broth",
                "next3_pos": "CD+NN+NN+NN",
                "next3_is_capitalised": False,
                "next3_is_unit": False,
                "next3_is_punc": False,
                "next3_is_ambiguous": False,
                "next3_is_in_parens": False,
                "next3_is_after_comma": False,
                "next3_is_after_plus": False,
                "next3_word_shape": "xxxxx",
            },
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "NN",
                "stem": "cup",
                "is_capitalised": False,
                "is_unit": True,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "xxx",
                "v0": -0.15598289668560028,
                "v1": -0.7311531901359558,
                "v2": -0.28150954842567444,
                "v3": -0.3382653594017029,
                "v4": 0.7856824398040771,
                "v5": 0.2057391107082367,
                "v6": 1.4230132102966309,
                "v7": -0.4138856828212738,
                "v8": -0.2200929969549179,
                "v9": 0.18283537030220032,
                "v10": -1.4061038494110107,
                "v11": 0.1154366284608841,
                "v12": 0.5298011302947998,
                "v13": 0.17468351125717163,
                "v14": 0.17680716514587402,
                "v15": -0.030261121690273285,
                "v16": 0.7180622220039368,
                "v17": -0.24787934124469757,
                "v18": -1.034907579421997,
                "v19": -0.4354341924190521,
                "v20": 0.15124927461147308,
                "v21": -3.0361979007720947,
                "v22": 0.0821448341012001,
                "v23": 0.3137955963611603,
                "v24": -0.17191854119300842,
                "prev_stem": "!num",
                "prev_pos": "CD+NN",
                "prev_is_capitalised": False,
                "prev_is_unit": False,
                "prev_is_punc": False,
                "prev_is_ambiguous": False,
                "prev_is_in_parens": False,
                "prev_is_after_comma": False,
                "prev_is_after_plus": False,
                "prev_word_shape": "!xxx",
                "next_stem": "chicken",
                "next_pos": "NN+NN",
                "next_is_capitalised": False,
                "next_is_unit": False,
                "next_is_punc": False,
                "next_is_ambiguous": False,
                "next_is_in_parens": False,
                "next_is_after_comma": False,
                "next_is_after_plus": False,
                "next_word_shape": "xxxxxxx",
                "next_v0": -1.1460591554641724,
                "next_v1": 0.9270825982093811,
                "next_v2": -0.4527732729911804,
                "next_v3": -0.002673894166946411,
                "next_v4": -0.13618342578411102,
                "next_v5": 0.9861839413642883,
                "next_v6": -0.868973970413208,
                "next_v7": 0.2862793207168579,
                "next_v8": -0.652691125869751,
                "next_v9": -0.8566416501998901,
                "next_v10": -0.4571804702281952,
                "next_v11": 0.39889490604400635,
                "next_v12": 0.9699640274047852,
                "next_v13": 0.44723567366600037,
                "next_v14": 0.6445245742797852,
                "next_v15": -0.06529361009597778,
                "next_v16": -0.31517505645751953,
                "next_v17": 0.12421265989542007,
                "next_v18": 0.229799285531044,
                "next_v19": 0.4373367726802826,
                "next_v20": -0.8788366317749023,
                "next_v21": -1.6756528615951538,
                "next_v22": -0.45405319333076477,
                "next_v23": -0.715367317199707,
                "next_v24": -0.39976072311401367,
                "next2_stem": "broth",
                "next2_pos": "NN+NN+NN",
                "next2_is_capitalised": False,
                "next2_is_unit": False,
                "next2_is_punc": False,
                "next2_is_ambiguous": False,
                "next2_is_in_parens": False,
                "next2_is_after_comma": False,
                "next2_is_after_plus": False,
                "next2_word_shape": "xxxxx",
            },
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "NN",
                "stem": "chicken",
                "is_capitalised": False,
                "is_unit": False,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "xxxxxxx",
                "prefix_3": "chi",
                "suffix_3": "ken",
                "prefix_4": "chic",
                "suffix_4": "cken",
                "prefix_5": "chick",
                "suffix_5": "icken",
                "v0": -1.1460591554641724,
                "v1": 0.9270825982093811,
                "v2": -0.4527732729911804,
                "v3": -0.002673894166946411,
                "v4": -0.13618342578411102,
                "v5": 0.9861839413642883,
                "v6": -0.868973970413208,
                "v7": 0.2862793207168579,
                "v8": -0.652691125869751,
                "v9": -0.8566416501998901,
                "v10": -0.4571804702281952,
                "v11": 0.39889490604400635,
                "v12": 0.9699640274047852,
                "v13": 0.44723567366600037,
                "v14": 0.6445245742797852,
                "v15": -0.06529361009597778,
                "v16": -0.31517505645751953,
                "v17": 0.12421265989542007,
                "v18": 0.229799285531044,
                "v19": 0.4373367726802826,
                "v20": -0.8788366317749023,
                "v21": -1.6756528615951538,
                "v22": -0.45405319333076477,
                "v23": -0.715367317199707,
                "v24": -0.39976072311401367,
                "prev_stem": "cup",
                "prev_pos": "NN+NN",
                "prev_is_capitalised": False,
                "prev_is_unit": True,
                "prev_is_punc": False,
                "prev_is_ambiguous": False,
                "prev_is_in_parens": False,
                "prev_is_after_comma": False,
                "prev_is_after_plus": False,
                "prev_word_shape": "xxx",
                "prev_v0": -0.15598289668560028,
                "prev_v1": -0.7311531901359558,
                "prev_v2": -0.28150954842567444,
                "prev_v3": -0.3382653594017029,
                "prev_v4": 0.7856824398040771,
                "prev_v5": 0.2057391107082367,
                "prev_v6": 1.4230132102966309,
                "prev_v7": -0.4138856828212738,
                "prev_v8": -0.2200929969549179,
                "prev_v9": 0.18283537030220032,
                "prev_v10": -1.4061038494110107,
                "prev_v11": 0.1154366284608841,
                "prev_v12": 0.5298011302947998,
                "prev_v13": 0.17468351125717163,
                "prev_v14": 0.17680716514587402,
                "prev_v15": -0.030261121690273285,
                "prev_v16": 0.7180622220039368,
                "prev_v17": -0.24787934124469757,
                "prev_v18": -1.034907579421997,
                "prev_v19": -0.4354341924190521,
                "prev_v20": 0.15124927461147308,
                "prev_v21": -3.0361979007720947,
                "prev_v22": 0.0821448341012001,
                "prev_v23": 0.3137955963611603,
                "prev_v24": -0.17191854119300842,
                "prev2_stem": "!num",
                "prev2_pos": "CD+NN+NN",
                "prev2_is_capitalised": False,
                "prev2_is_unit": False,
                "prev2_is_punc": False,
                "prev2_is_ambiguous": False,
                "prev2_is_in_parens": False,
                "prev2_is_after_comma": False,
                "prev2_is_after_plus": False,
                "prev2_word_shape": "!xxx",
                "next_stem": "broth",
                "next_pos": "NN+NN",
                "next_is_capitalised": False,
                "next_is_unit": False,
                "next_is_punc": False,
                "next_is_ambiguous": False,
                "next_is_in_parens": False,
                "next_is_after_comma": False,
                "next_is_after_plus": False,
                "next_word_shape": "xxxxx",
                "next_v0": 0.26466062664985657,
                "next_v1": 0.8809674978256226,
                "next_v2": -0.9838987588882446,
                "next_v3": -0.5086348056793213,
                "next_v4": 0.16640286147594452,
                "next_v5": 0.88038170337677,
                "next_v6": -0.08032198250293732,
                "next_v7": -0.2478625476360321,
                "next_v8": -0.8176366090774536,
                "next_v9": -0.2833949029445648,
                "next_v10": -1.0543445348739624,
                "next_v11": 1.0783469676971436,
                "next_v12": 1.2899869680404663,
                "next_v13": -0.22491832077503204,
                "next_v14": 0.48302197456359863,
                "next_v15": 0.2023828625679016,
                "next_v16": 0.11202346533536911,
                "next_v17": -0.6381187438964844,
                "next_v18": -0.08628921210765839,
                "next_v19": 1.6437619924545288,
                "next_v20": -0.7943282127380371,
                "next_v21": -2.0465333461761475,
                "next_v22": -0.336448073387146,
                "next_v23": -0.29068538546562195,
                "next_v24": -0.40672779083251953,
            },
            {
                "bias": "",
                "sentence_length": 4,
                "pos": "NN",
                "stem": "broth",
                "is_capitalised": False,
                "is_unit": False,
                "is_punc": False,
                "is_ambiguous": False,
                "is_in_parens": False,
                "is_after_comma": False,
                "is_after_plus": False,
                "word_shape": "xxxxx",
                "prefix_3": "bro",
                "suffix_3": "oth",
                "prefix_4": "brot",
                "suffix_4": "roth",
                "v0": 0.26466062664985657,
                "v1": 0.8809674978256226,
                "v2": -0.9838987588882446,
                "v3": -0.5086348056793213,
                "v4": 0.16640286147594452,
                "v5": 0.88038170337677,
                "v6": -0.08032198250293732,
                "v7": -0.2478625476360321,
                "v8": -0.8176366090774536,
                "v9": -0.2833949029445648,
                "v10": -1.0543445348739624,
                "v11": 1.0783469676971436,
                "v12": 1.2899869680404663,
                "v13": -0.22491832077503204,
                "v14": 0.48302197456359863,
                "v15": 0.2023828625679016,
                "v16": 0.11202346533536911,
                "v17": -0.6381187438964844,
                "v18": -0.08628921210765839,
                "v19": 1.6437619924545288,
                "v20": -0.7943282127380371,
                "v21": -2.0465333461761475,
                "v22": -0.336448073387146,
                "v23": -0.29068538546562195,
                "v24": -0.40672779083251953,
                "prev_stem": "chicken",
                "prev_pos": "NN+NN",
                "prev_is_capitalised": False,
                "prev_is_unit": False,
                "prev_is_punc": False,
                "prev_is_ambiguous": False,
                "prev_is_in_parens": False,
                "prev_is_after_comma": False,
                "prev_is_after_plus": False,
                "prev_word_shape": "xxxxxxx",
                "prev_v0": -1.1460591554641724,
                "prev_v1": 0.9270825982093811,
                "prev_v2": -0.4527732729911804,
                "prev_v3": -0.002673894166946411,
                "prev_v4": -0.13618342578411102,
                "prev_v5": 0.9861839413642883,
                "prev_v6": -0.868973970413208,
                "prev_v7": 0.2862793207168579,
                "prev_v8": -0.652691125869751,
                "prev_v9": -0.8566416501998901,
                "prev_v10": -0.4571804702281952,
                "prev_v11": 0.39889490604400635,
                "prev_v12": 0.9699640274047852,
                "prev_v13": 0.44723567366600037,
                "prev_v14": 0.6445245742797852,
                "prev_v15": -0.06529361009597778,
                "prev_v16": -0.31517505645751953,
                "prev_v17": 0.12421265989542007,
                "prev_v18": 0.229799285531044,
                "prev_v19": 0.4373367726802826,
                "prev_v20": -0.8788366317749023,
                "prev_v21": -1.6756528615951538,
                "prev_v22": -0.45405319333076477,
                "prev_v23": -0.715367317199707,
                "prev_v24": -0.39976072311401367,
                "prev2_stem": "cup",
                "prev2_pos": "NN+NN+NN",
                "prev2_is_capitalised": False,
                "prev2_is_unit": True,
                "prev2_is_punc": False,
                "prev2_is_ambiguous": False,
                "prev2_is_in_parens": False,
                "prev2_is_after_comma": False,
                "prev2_is_after_plus": False,
                "prev2_word_shape": "xxx",
                "prev3_stem": "!num",
                "prev3_pos": "CD+NN+NN+NN",
                "prev3_is_capitalised": False,
                "prev3_is_unit": False,
                "prev3_is_punc": False,
                "prev3_is_ambiguous": False,
                "prev3_is_in_parens": False,
                "prev3_is_after_comma": False,
                "prev3_is_after_plus": False,
                "prev3_word_shape": "!xxx",
            },
        ]

        assert p.sentence_features() == expected
