[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"

[project]
# Use a slightly different name to avoid conflict with pre-existing package in pypi
name = "ingredient_parser_nlp"
dynamic = ["version"]
description = "A Python package to parse structured information from recipe ingredient sentences"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.10, <3.14"
keywords = ["recipe", "ingredient", "ingredients", "nlp", "parsing" ]
authors = [
    { name="Tom Strange", email="tpstrange@gmail.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "nltk>=3.9.1",
    "python-crfsuite",
    "pint>=0.24.4",
    "numpy",
]

[project.urls]
Homepage = "https://github.com/strangetom/ingredient-parser/"
Documentation = "https://ingredient-parser.readthedocs.io/en/latest/"
Source = "https://github.com/strangetom/ingredient-parser"
Changelog = "https://github.com/strangetom/ingredient-parser/blob/master/CHANGELOG.md"

[tool.setuptools]
packages = ["ingredient_parser", "ingredient_parser.en"]

[tool.setuptools.dynamic]
version =  {attr = "ingredient_parser.__version__"}

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--import-mode=importlib",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
omit = [
    "tests/*"
]

[tool.ruff]
exclude = [
    "**/__pycache__",
    ".git",
    "venv"
]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "PT", "RUF"]
ignore = [
    "E402",   # To enable path to be modified in doc conf.py before import
    "RUF001", # Ambiguous unicode characters are handled explicitly in functions
    "RUF002"  # Ambiguous unicode characters are handled explicitly in functions
]

[tool.ruff.format]
docstring-code-format = true

[tool.pyright]
include = ["ingredient_parser", "train"]
exclude = ["**/__pycache__"]
reportUnusedImport = true
reportUnusedClass = true
reportUnuedFunction = true
reportUnusedVariable = true
reportWildcardImportFromLibrary = true
reportPrivateUsage = true
